doctype html
html
  head
    title PlaneText
    meta charset="UTF-8"
    script src="//code.jquery.com/jquery-2.1.1.min.js"
    sass:
      $header: 35px
      $headerfontsize: 30px
      $padding: 3px
      $selectheader: 18px
      $selectheadertbpad: 3px
      $selectheaderrlpad: 2px
      $selectheight: 100px
      $selectleftheaderheight: 25px

      $selecttotalheight: $selectheader + $selectheight + 2 * $selectheadertbpad
      $taggedtop: $header + $selecttotalheight

      @mixin vertical($width, $height)
        $lrpad: 4px
        $tbpad: 2px
        $transx: -($width - $height) / 2
        $transy: ($width - $height) / 2
        -moz-transform: translate($transx, $transy) rotate(-90deg)
        -o-transform: translate($transx, $transy) rotate(-90deg)
        -webkit-transform: translate($transx, $transy) rotate(-90deg)
        // TODO IE
        // filter:  progid:DXImageTransform.Microsoft.BasicImage(rotation=0.083)
        // -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=0.083)"
        width: $width - $lrpad * 2
        height: $height - $tbpad * 2
        position: absolute
        text-align: right
        padding: $tbpad $lrpad
      @mixin header()
        background-color: #000000
        color: #ffffff

      html, body
        margin: 0
        box-sizing: content-box
        user-select: none
      header
        @include header()
        font: bold italic $headerfontsize 'Arial'
        width: 100%
        height: $header
        & > div
          padding-left: $padding
      .untagged
        top: $header
      .tagged
        top: $taggedtop
        ul
          background-color: #eeffee
        #trash
          background-color: #ebe0d6
      .leftheader
        @include vertical($selecttotalheight, $selectleftheaderheight)
        @include header()
        font: bold italic 15px 'Arial'
      .selects
        user-select: none
        position: absolute
        left: $selectleftheaderheight
        right: 0
        height: $selecttotalheight
        & > div
          display: inline-block
          width: 20%
          height: $selecttotalheight
          & > div // header
            font: bold 1em 'Arial'
            padding: $selectheadertbpad $selectheaderrlpad
            background-color: #444444
            color: #ffffff
            height: $selectheader
          :first-child
            border-right: none
        ul
          margin: 0
          padding: 0
          list-item-marker: none
          overflow-y: auto
          width: 100%
          height: $selectheight
          outline: none
          &:focus
            background-color: #eeeeff
          &.disabled
            background-color: #dddddd
          li
            cursor: default
            padding: 0 $padding
            overflow-x: hidden
            white-space: nowrap
          li.selected
            color: #000000
            background-color: #d4d4d4
          &:focus li.selected
            color: #ffffff
            background-color: #2a80df
      iframe
        width: 100%
    script
      ' var unknowns =
      == JSON.dump(unknowns)
      | ;
      ' var selectors =
      == JSON.dump(selectors)
      | ;
    coffee:
      $ ->
        disable_empty = ->
          disable_if_empty($tag)
          disable_if_empty($attr)
          disable_if_empty($word)
          disable_if_empty($value)
          disable_if_empty($instance)
        disable_if_empty = ($select) ->
          empty = $select.find('li').length == 0
          $select.toggleClass('disabled', empty)
        select_li = (evt) ->
          $(evt.target).closest('ul').find('li.selected').removeClass('selected')
          $selected_li = $(evt.target).addClass('selected')
        fill_instances_by_word = ->
          matching = null
          selected_tag = $tag.find('li.selected').text()
          selected_attr = $attr.find('li.selected').text()
          attr = unknowns[selected_tag][selected_attr]
          $word.find('li.selected').map ->
            word = this.textContent
            word_instances = attr[0][word]
            if matching
              for index of matching
                delete matching[index] unless index in word_instances
            else
              matching = {}
              matching[index] = true for index in word_instances
          unique_values = {}
          for index in Object.keys(matching)
            data = attr[1][index]
            str = "#{data[2]} (#{data[0]}-#{data[1]})"
            $('<li>').text(str).appendTo($instance)
            unique_values[attr[1][index][3]] = true;
          unique_values

        $tag = $('#tag')
        $attr = $('#attr')
        $word = $('#word')
        $value = $('#value')
        $instance = $('#instance')

        $tag.click ->
          $tag.find('li.selected').removeClass('selected')
          $attr.empty()
          $word.empty()
          $value.empty()
          $instance.empty()
          disable_empty()
        $tag.on 'click', 'li', (evt) ->
          evt.stopPropagation()
          $attr.empty()
          $word.empty()
          $value.empty()
          $instance.empty()
          return unless evt.target.nodeName == "LI"
          $selected_li = select_li(evt)
          selected_tag = $selected_li.text()
          for attr_name, attr of unknowns[selected_tag]
            unless attr_name == ''
              $('<li draggable="true">').text(attr_name).appendTo($attr)
            for data in attr[1]
              str = "#{data[2]} (#{data[0]}-#{data[1]})"
              $('<li>').text(str).appendTo($instance)
          disable_empty()
        $attr.click ->
          $attr.find('li.selected').removeClass('selected')
          $word.empty()
          $value.empty()
          $instance.empty()
          disable_empty()
        $attr.on 'click', 'li', (evt) ->
          evt.stopPropagation()
          $word.empty()
          $value.empty()
          $instance.empty()
          $selected_li = select_li(evt)
          selected_tag = $tag.find('li.selected').text()
          selected_attr = $selected_li.text()
          attr = unknowns[selected_tag][selected_attr]
          for attr_word of attr[0]
            $('<li draggable="true">').text(attr_word).appendTo($word)
            for index in attr[0][attr_word]
              data = attr[1][index]
              str = "#{data[2]} (#{data[0]}-#{data[1]})"
              $('<li>').text(str).appendTo($instance)
          disable_empty()
        $word.click ->
          $word.find('li.selected').removeClass('selected')
          $value.empty()
          $instance.empty()
          disable_empty()
        $word.on 'click', 'li', (evt) ->
          evt.stopPropagation()
          $value.empty()
          $instance.empty()
          $selected_li = select_li(evt)
          unique_values = fill_instances_by_word()
          for value in Object.keys(unique_values)
            $('<li>').text(value).appendTo($value)
          disable_empty()
        $value.click ->
          $value.find('li.selected').removeClass('selected')
          $instance.empty()
          fill_instances_by_word()
          disable_empty()
        $value.on 'click', 'li', (evt) ->
          evt.stopPropagation()
          $instance.empty()
          $selected_li = select_li(evt)
          selected_tag = $tag.find('li.selected').text()
          selected_attr = $attr.find('li.selected').text()
          selected_value = $selected_li.text()
          attr = unknowns[selected_tag][selected_attr]
          for data in attr[1]
            if data[3] == selected_value
              str = "#{data[2]} (#{data[0]}-#{data[1]})"
              $('<li>').text(str).appendTo($instance)
          disable_empty()
        $instance.click ->
          $instance.find('li.selected').removeClass('selected')
          # TODO clear the instance
        $instance.on 'click', 'li', (evt) ->
          evt.stopPropagation()
          $selected_li = select_li(evt)
          # TODO show the instance

        $('.untagged ul').keydown (evt) ->
          selects = ['tag', 'attr', 'word', 'value', 'instance']
          current = selects.indexOf(evt.target.id)
          next =
            switch evt.keyCode
              when 37 # left
                selects[current - 1]
              when 39 # right
                selects[current + 1]
              when 38 # up
                $selected_li = $(evt.target).find('li.selected')
                $li = $selected_li.prev()
                if ($li.length)
                  $selected_li.removeClass('selected')
                  $li.addClass('selected')
                selects[current]
              when 40 # down
                $selected_li = $(evt.target).find('li.selected')
                $li = $selected_li.next()
                if ($li.length)
                  $selected_li.removeClass('selected')
                  $li.addClass('selected')
                selects[current]
          if next
            evt.stopPropagation()
            evt.preventDefault()
            if $selected_li # up, down
              if (li = $li[0])
                ul = evt.target
                ul_top = ul.scrollTop
                ul_bottom = ul_top + ul.clientHeight - li.clientHeight
                pos = li.offsetTop - ul.offsetTop
                if pos < ul_top
                  li.scrollIntoView(true)
                else if pos > ul_bottom
                  li.scrollIntoView(false)
            else # left, right
              $ul = $("##{next}")
              return if $ul.hasClass('disabled')
              $ul.focus()
              $li = $ul.find('li.selected')
              $li = $ul.find('li:first-child') unless $li.length
            if $li.length
              $li[0].click()

        disable_empty()
  body
    header
      div PlaneText
    div.leftheader.untagged Unknown Tags
    div.selects.untagged
      div
        div Tag
        ul id="tag" size="2" tabindex="1"
          - unknowns.each do |tag_name, _|
            li draggable="true" #{tag_name}
      div
        div Attribute
        ul id="attr" size="2" tabindex="2"
      div
        div Word
        ul id="word" size="2" multiple="multiple" tabindex="3"
      div
        div Value
        ul id="value" size="2" tabindex="4"
      div
        div Instance
        ul id="instance" size="2" tabindex="5"
    div.leftheader.tagged Classified Tags
    div.selects.tagged
      div
        div Independent
        ul id="independent" size="2"
      div
        div Decoration
        ul id="decoration" size="2"
      div
        div Object
        ul id="object" size="2"
      div
        div Metainfo
        ul id="metainfo" size="2"
      div
        div Trash
        ul id="trash" size="2"
