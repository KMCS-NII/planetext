doctype html
html
  head
    title PlaneText
    meta charset="UTF-8"
    script src="//code.jquery.com/jquery-2.1.1.min.js"
    sass:
      $header: 35px
      $headerfontsize: 30px
      $padding: 3px
      $selectheader: 20px
      $selectheight: 100px
      $taggedtop: $header + $selectheader + $selectheight
      html, body
        margin: 0
        box-sizing: content-box
      header
        font: bold italic $headerfontsize 'Arial'
        background-color: #000000
        color: #ffffff
        width: 100%
        height: $header
        & > div
          padding-left: $padding
      #untagged
        top: $header
      #tagged
        top: $taggedtop
        select
          background-color: #eeffee
      .selects
        position: absolute
        left: 0
        right: 0
        height: $selectheader + $selectheight
        & > div
          display: inline-block
          width: 20%
          height: $selectheader + $selectheight
          & > div
            font: bold 1em 'Arial'
            padding-left: $padding
            background-color: #444444
            color: #ffffff
            height: $selectheader
        select
          width: 100%
          height: $selectheight
          outline: none
          &:focus
            background-color: #eeeeff
          &:disabled
            background-color: #dddddd
      iframe
        width: 100%
    script
      ' var unknowns =
      == JSON.dump(unknowns)
      | ;
    coffee:
      $ ->
        disable_empty = ->
          disable_if_empty($tag)
          disable_if_empty($attr)
          disable_if_empty($word)
          disable_if_empty($value)
          disable_if_empty($instance)
        disable_if_empty = ($select) ->
          empty = $select.find('option').length == 0
          $select.prop('disabled', empty)

        $tag = $('#tag').click (evt) ->
          try
            $attr.empty()
            $word.empty()
            $value.empty()
            $instance.empty()
            return if evt.target.nodeName == "SELECT"
            selected_tag = $tag.val()
            for attr_name, attr of unknowns[selected_tag]
              unless attr_name == '-'
                $('<option>').text(attr_name).appendTo($attr)
              for data in attr[1]
                str = "#{data[2]} (#{data[0]}-#{data[1]})"
                $('<option>').text(str).appendTo($instance)
          finally
            disable_empty()
        $attr = $('#attr').click (evt) ->
          try
            $word.empty()
            $value.empty()
            $instance.empty()
            return if evt.target.nodeName == "SELECT"
            selected_tag = $tag.val()
            selected_attr = $attr.val()
            attr = unknowns[selected_tag][selected_attr]
            for attr_word of attr[0]
              $('<option>').text(attr_word).appendTo($word)
              for index in attr[0][attr_word]
                data = attr[1][index]
                str = "#{data[2]} (#{data[0]}-#{data[1]})"
                $('<option>').text(str).appendTo($instance)
          finally
            disable_empty()
        $word = $('#word').click (evt) ->
          try
            $value.empty()
            $instance.empty()
            return if evt.target.nodeName == "SELECT"
            matching = null
            selected_tag = $tag.val()
            selected_attr = $attr.val()
            attr = unknowns[selected_tag][selected_attr]
            $word.find('option:selected').map ->
              word = this.value
              word_instances = attr[0][word]
              if matching
                for index of matching
                  delete matching[index] unless index in word_instances
              else
                matching = {}
                matching[index] = true for index in word_instances
            unique_values = {}
            for index in Object.keys(matching)
              data = attr[1][index]
              str = "#{data[2]} (#{data[0]}-#{data[1]})"
              $('<option>').text(str).appendTo($instance)
              unique_values[attr[1][index][3]] = true;
            for value in Object.keys(unique_values)
              $('<option>').text(value).appendTo($value)
          finally
            disable_empty()
        $value = $('#value').click (evt) ->
          try
            $instance.empty()
            return if evt.target.nodeName == "SELECT"
            selected_tag = $tag.val()
            selected_attr = $attr.val()
            selected_value = $value.val()
            attr = unknowns[selected_tag][selected_attr]
            for data in attr[1]
              if data[3] == selected_value
                str = "#{data[2]} (#{data[0]}-#{data[1]})"
                $('<option>').text(str).appendTo($instance)
          finally
            disable_empty()
        $instance = $('#instance').click (evt) ->
          return if evt.target.nodeName == "SELECT"

        $('select').keyup (evt) ->
          selects = ['tag', 'attr', 'word', 'value', 'instance']
          current = selects.indexOf(evt.target.id)
          next =
            switch evt.keyCode
              when 37
                selects[current - 1]
              when 39
                selects[current + 1]
              when 38, 40
                selects[current]
          if next
            $select = $("##{next}")
            return unless $select.find('option').length
            $select.focus()
            $option =
              if $select.val()
                $select.find('option:selected')
              else
                $select.find('option:first-child').prop('selected', true)
            $option.trigger('click')

        disable_empty()
  body
    header
      div PlaneText
    div.selects#untagged
      div
        div Tag
        select id="tag" size="2"
          - unknowns.each do |tag_name, _|
            option draggable="true" #{tag_name}
      div
        div Attribute
        select id="attr" size="2"
      div
        div Word
        select id="word" size="2" multiple="multiple"
      div
        div Whole value
        select id="value" size="2"
      div
        div Instance
        select id="instance" size="2"
    div.selects#tagged
      div
        div Independent
        select id="independent" size="2"
      div
        div Decoration
        select id="decoration" size="2"
      div
        div Object
        select id="object" size="2"
      div
        div Metainfo
        select id="metainfo" size="2"
